package org.cytoscape.gfdnet.view.resultPanel;

import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.Icon;
import org.cytoscape.application.swing.CytoPanelComponent;
import org.cytoscape.application.swing.CytoPanelName;
import org.cytoscape.gfdnet.controller.ResultPanelsController;
import org.cytoscape.gfdnet.model.businessobjects.GFDnetResult;
import org.cytoscape.gfdnet.model.businessobjects.GeneInput;

/**
 * @license Apache License V2 <http://www.apache.org/licenses/LICENSE-2.0.html>
 * @author Juan José Díaz Montaña
 */
public class MainResultsView extends javax.swing.JPanel implements CytoPanelComponent{  
    private final ResultPanelsController resultPanels;
    /**
     * Creates new form ResultsView
     * @param c
     */
    public MainResultsView(GFDnetResult result, ResultPanelsController resultPanels) {
        this.resultPanels = resultPanels;
        initComponents(result);
        similarityValue.setText(String.format("%.6f", result.getSimilarity()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(GFDnetResult result) {

        HeaderPanel = new javax.swing.JPanel();
        GenusLabel = new javax.swing.JLabel();
        OntologyLabel = new javax.swing.JLabel();
        GenusValue = new javax.swing.JTextField();
        OntologyValue = new javax.swing.JTextField();
        SpeciesLabel = new javax.swing.JLabel();
        SpeciesValue = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        similarityLabel = new javax.swing.JLabel();
        similarityValue = new javax.swing.JTextField();
        ContainerPanel = new javax.swing.JPanel();
        DefaultResultsPanel = new DefaultResultsPanel(result.getNetwork(), resultPanels);
        NodeResultsPanel = new NodeResultsPanel(result.getOntology());
        EdgeResultsPanel = new EdgeResultsPanel(resultPanels);

        setAutoscrolls(true);
        setPreferredSize(new java.awt.Dimension(345, 574));
        setLayout(new java.awt.BorderLayout());

        GenusLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        GenusLabel.setText("Genus:");

        OntologyLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        OntologyLabel.setText("Ontology:");

        GenusValue.setEditable(false);
        GenusValue.setText(result.getOrganism().getGenus());
        GenusValue.setBorder(null);
        GenusValue.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        OntologyValue.setEditable(false);

        OntologyValue.setText(result.getOntology().getDescription());
        OntologyValue.setBorder(null);
        OntologyValue.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        SpeciesLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SpeciesLabel.setText("Species:");

        SpeciesValue.setEditable(false);
        SpeciesValue.setText(result.getOrganism().getSpecies());
        SpeciesValue.setBorder(null);
        SpeciesValue.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        similarityLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        similarityLabel.setText("Dissimilarity:");

        similarityValue.setEditable(false);
        similarityValue.setText("Similarity");
        similarityValue.setBorder(null);
        similarityValue.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(HeaderPanelLayout.createSequentialGroup()
                        .addComponent(GenusLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GenusValue)
                        .addGap(35, 35, 35))
                    .addGroup(HeaderPanelLayout.createSequentialGroup()
                        .addComponent(SpeciesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SpeciesValue)
                        .addGap(34, 34, 34))
                    .addGroup(HeaderPanelLayout.createSequentialGroup()
                        .addComponent(OntologyLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OntologyValue, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                        .addGap(34, 34, 34))
                    .addGroup(HeaderPanelLayout.createSequentialGroup()
                        .addComponent(similarityLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(similarityValue)
                        .addGap(34, 34, 34))))
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenusLabel)
                    .addComponent(GenusValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SpeciesLabel)
                    .addComponent(SpeciesValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OntologyLabel)
                    .addComponent(OntologyValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(similarityLabel)
                    .addComponent(similarityValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GenusLabel.getAccessibleContext().setAccessibleName("Organism");
        OntologyLabel.getAccessibleContext().setAccessibleName("Ontology");
        GenusValue.getAccessibleContext().setAccessibleName("");

        add(HeaderPanel, java.awt.BorderLayout.NORTH);

        ContainerPanel.setLayout(new java.awt.CardLayout());
        ContainerPanel.add(DefaultResultsPanel, "DefaultResultsPanel");
        ContainerPanel.add(NodeResultsPanel, "NodeResultsPanel");
        ContainerPanel.add(EdgeResultsPanel, "EdgeResultsPanel");

        add(ContainerPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>                        

    public void showGeneInfo(GeneInput gene){
        NodeResultsPanel.updateView(gene);
        getCardLayout().show(ContainerPanel, "NodeResultsPanel");
    }
    
    public void showEdgeInfo(GeneInput gene1, GeneInput gene2, double similarity){
        EdgeResultsPanel.updateView(gene1, gene2, similarity);
        getCardLayout().show(ContainerPanel, "EdgeResultsPanel");
    }
    
    public void ShowDefaultInfo(){
        getCardLayout().show(ContainerPanel, "DefaultResultsPanel");
    }
    
    private CardLayout getCardLayout(){
        return (CardLayout)(ContainerPanel.getLayout());
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JPanel ContainerPanel;
    private DefaultResultsPanel DefaultResultsPanel;
    private EdgeResultsPanel EdgeResultsPanel;
    private javax.swing.JLabel GenusLabel;
    private javax.swing.JTextField GenusValue;
    private javax.swing.JPanel HeaderPanel;
    private NodeResultsPanel NodeResultsPanel;
    private javax.swing.JLabel OntologyLabel;
    private javax.swing.JTextField OntologyValue;
    private javax.swing.JLabel SpeciesLabel;
    private javax.swing.JTextField SpeciesValue;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel similarityLabel;
    private javax.swing.JTextField similarityValue;
    // End of variables declaration                   

    @Override
    public Component getComponent() {
        return this;
    }

    @Override
    public CytoPanelName getCytoPanelName() {
         return CytoPanelName.EAST;
    }

    @Override
    public String getTitle() {
        return "Results";
    }

    @Override
    public Icon getIcon() {
        return null;
    }
}
