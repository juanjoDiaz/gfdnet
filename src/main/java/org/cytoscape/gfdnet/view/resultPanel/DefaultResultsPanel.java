package org.cytoscape.gfdnet.view.resultPanel;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JTable;
import org.cytoscape.gfdnet.controller.ResultPanelsController;
import org.cytoscape.gfdnet.model.businessobjects.GeneInput;
import org.cytoscape.gfdnet.model.businessobjects.Graph;

/**
 * @license Apache License V2 <http://www.apache.org/licenses/LICENSE-2.0.html>
 * @author Juan José Díaz Montaña
 */
public class DefaultResultsPanel extends javax.swing.JPanel {
    private final ResultPanelsController resultPanels;
    private Object[][] rows;
    private int cont;
    /**
     * Creates new form DefaultResultsPanel
     */
    public DefaultResultsPanel(Graph<GeneInput> net, ResultPanelsController resultPanels) {
        initComponents();
        this.resultPanels = resultPanels;
        cont = 0;
        
        int len = net.getNodes().size();
        List<Object[]> summaryModel = new ArrayList();
        for (int i=0; i< len; i++){
            for (int j=i+1; j< len; j++){
                double weight = net.getEdgeWeight(i,j);
                if(weight != -1){
                    Object[] row = new Object[3];
                    row[0] = net.getNode(i).getName();
                    row[1] = net.getNode(j).getName();
                    row[2] = weight;
                    summaryModel.add(row);
                }
            }
        }
        Collections.sort(summaryModel, new Comparator(){
            @Override
            public int compare(Object o1, Object o2) {
                double p1 = ((Double) ((Object[])o1)[2]);
                double p2 = (Double) ((Object[])o2)[2];
                if (p1 < p2) { return -1; }
                else if (p1 > p2) { return 1; }
                else { return 0; }
            }
        });
        
        rows = new Object[summaryModel.size()][3];
        for (Object[] rowIt : summaryModel){
            rowIt[2] = String.format("%.6f", (Double)rowIt[2]);
            System.arraycopy(rowIt, 0, rows[cont], 0, 3);
            cont++;
        }
        
        Summary.setModel(new javax.swing.table.DefaultTableModel(
                rows,
                new String[] {
                    "Gene 1", "Gene 2", "Dissimilarity"
                }
            ){
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Summary = new javax.swing.JTable();

        Summary.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Summary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SummaryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Summary);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SummaryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SummaryMouseClicked
        JTable target = (JTable)evt.getSource();
        int sel = target.getSelectedRow();
        if (evt.getClickCount() == 1) {
            resultPanels.selectEdge((String) rows[sel][0], (String) rows[sel][1]);
        }
        else if (evt.getClickCount() == 2) {
            resultPanels.showEdgeInfo((String) rows[sel][0], (String) rows[sel][1]);
        }
    }//GEN-LAST:event_SummaryMouseClicked
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Summary;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
