package org.cytoscape.gfdnet.view.configurationDialogs;

import java.util.concurrent.ExecutionException;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import org.cytoscape.gfdnet.controller.CoreController;
import org.cytoscape.gfdnet.controller.utils.CySwing;
import org.cytoscape.gfdnet.model.businessobjects.exceptions.DataBaseException;
import org.cytoscape.gfdnet.view.LoadingOrganismsDialog;

/**
 * @license Apache License V2 <http://www.apache.org/licenses/LICENSE-2.0.html>
 * @author Juan José Díaz Montaña
 */
public class SetOrganismMainView extends javax.swing.JDialog {
    private CoreController core;
    /**
     * Creates new form SetOrganismView
     */
    public SetOrganismMainView(CoreController core) {
        super(CySwing.getDesktopJFrame(), true);
        this.core = core;
        initComponents();
        setLocationRelativeTo(CySwing.getDesktopJFrame());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        OrganismList = new javax.swing.JList();
        setOrganismLabel = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        PreloadOrganismCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        OrganismList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Arabidopsis thaliana", "Caenorhabditis elegans",
                "Danio rerio", "Dictyostelium discoideum", "Drosophila melanogaster",
                "Escherichia coli", "Gallus gallus", "Homo sapiens", "Mus musculus",
                "Rattus norvegicus", "Saccharomyces cerevisiae",
                "Schizosaccharomyces pombe", "Others..." };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(OrganismList);

        setOrganismLabel.setText("Choose an organism:");

        acceptButton.setText("Accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        PreloadOrganismCheckBox.setText("Preload organism");
        PreloadOrganismCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(acceptButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(setOrganismLabel)))
                .addContainerGap())
            .addComponent(PreloadOrganismCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(setOrganismLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptButton)
                    .addComponent(cancelButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PreloadOrganismCheckBox))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        Object organismName = OrganismList.getSelectedValue();
        if (organismName == null){
            CySwing.displayPopUpMessage("An organism must be selected");
        }
        else if (organismName.equals("Others...")){                       
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {  
                    final LoadingOrganismsDialog d = new LoadingOrganismsDialog(CySwing.getDesktopJFrame());
                    SwingWorker worker = new SwingWorker<SetOrganismSecondaryView, Void>() {
                        @Override
                        public SetOrganismSecondaryView doInBackground() {
                            try {
                                return new SetOrganismSecondaryView(core, PreloadOrganismCheckBox.isSelected());
                            } catch (DataBaseException ex) {
                                CySwing.displayPopUpMessage("There was a problem accesing the database.");
                                return null;
                            }
                        }
                        @Override
                        public void done() {
                            try {
                                final SetOrganismSecondaryView v = get();
                                if (v != null) {
                                    v.addWindowListener(new java.awt.event.WindowAdapter() {
                                        @Override
                                        public void windowClosing(java.awt.event.WindowEvent e) {
                                            v.dispose();
                                        }
                                    });
                                    d.dispose();
                                    v.setVisible(true);
                                }
                            } catch (InterruptedException ex) {
                                d.dispose();
                                CySwing.displayPopUpMessage("Something went wrong loading the organisms.");
                            } catch (ExecutionException ex) {
                                d.dispose();
                                CySwing.displayPopUpMessage("Something went wrong loading the organisms.");
                            }
                        }
                    };
                    worker.execute();
                    d.pack();
                    d.setVisible(true);
                }
            });
            this.dispose();  
        }
        else{
            String organismNameS = organismName.toString();
            int aux = organismNameS.indexOf(" ");
            dispose();
            core.setOrganism(organismNameS.substring(0,aux),
                    organismNameS.substring(aux+1, organismNameS.length()),
                    PreloadOrganismCheckBox.isSelected());
        }
    }//GEN-LAST:event_acceptButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList OrganismList;
    private javax.swing.JCheckBox PreloadOrganismCheckBox;
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel setOrganismLabel;
    // End of variables declaration//GEN-END:variables
}